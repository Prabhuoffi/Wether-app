{"ast":null,"code":"import _toConsumableArray from\"C:/Users/prabh/OneDrive/Documents/html/Desktop/Weather-App/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/prabh/OneDrive/Documents/html/Desktop/Weather-App/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import axios from'axios';import{AreaChart,Area,XAxis,YAxis,Legend,Tooltip}from'recharts';import{DataContext}from'./DataContext';import{useContext}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WeatherChart=function WeatherChart(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),temperatureData=_useState2[0],setTemperatureData=_useState2[1];var _useContext=useContext(DataContext),weatherData=_useContext.weatherData;var convertToIST=function convertToIST(timestamp){var date=new Date(timestamp);var ISTOffset=330;// IST offset from UTC in minutes\nvar utc=date.getTime()+date.getTimezoneOffset()*60000;var ist=new Date(utc+ISTOffset*60000);return ist;};useEffect(function(){if(weatherData){var apiKey='d7ddcaaf3a176d61e7db6e5f7d7f3996';var city=weatherData.name;// Fetch hourly weather data for today and tomorrow\nvar today=new Date().toISOString().slice(0,10);// Get today's date in 'YYYY-MM-DD' format\nvar tomorrow=new Date(Date.now()+24*60*60*1000).toISOString().slice(0,10);// Get tomorrow's date\naxios.get(\"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(city,\"&appid=\").concat(apiKey,\"&units=metric\")).then(function(response){var todayData=response.data.list.filter(function(item){return item.dt_txt.startsWith(today);});var tomorrowData=response.data.list.filter(function(item){return item.dt_txt.startsWith(tomorrow);});var combinedData=[].concat(_toConsumableArray(todayData),_toConsumableArray(tomorrowData));var hourlyData=combinedData.map(function(item){return{timestamp:item.dt*1000,time:convertToIST(item.dt*1000),// Convert timestamp to IST\ntemperature:item.main.temp};});setTemperatureData(hourlyData);}).catch(function(error){console.error('Error fetching weather data:',error);});}},[weatherData]);return/*#__PURE__*/_jsx(\"div\",{className:\"pt-20 px-40\",children:/*#__PURE__*/_jsxs(AreaChart,{width:1150,height:300,data:temperatureData,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"timestamp\",tickFormatter:function tickFormatter(timestamp){var time=convertToIST(timestamp);return\"\".concat(time.getHours(),\":\").concat(time.getMinutes());},interval:0,padding:{left:10,right:10},tick:{fill:'white',fontSize:13},axisLine:{stroke:'white'}// Display every data point\n}),/*#__PURE__*/_jsx(YAxis,{dataKey:\"temperature\",hide:true}),/*#__PURE__*/_jsx(Tooltip,{labelFormatter:function labelFormatter(label){var time=convertToIST(label);var ISTTime=new Date(label);var hours=ISTTime.getHours();var minutes=ISTTime.getMinutes();var ampm=hours>=12?'PM':'AM';var formattedTime=\"\".concat(time.toDateString(),\" \").concat(hours%12||12,\":\").concat(minutes<10?'0':'').concat(minutes,\" \").concat(ampm);return formattedTime;}}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Area,{type:\"monotone\",dataKey:\"temperature\",fill:\"white\",stroke:\"white\",name:\"Hourly Temperature (\\xB0C)\",fillOpacity:0.3})]})});};export default WeatherChart;","map":{"version":3,"names":["React","useEffect","useState","axios","AreaChart","Area","XAxis","YAxis","Legend","Tooltip","DataContext","useContext","jsx","_jsx","jsxs","_jsxs","WeatherChart","_useState","_useState2","_slicedToArray","temperatureData","setTemperatureData","_useContext","weatherData","convertToIST","timestamp","date","Date","ISTOffset","utc","getTime","getTimezoneOffset","ist","apiKey","city","name","today","toISOString","slice","tomorrow","now","get","concat","then","response","todayData","data","list","filter","item","dt_txt","startsWith","tomorrowData","combinedData","_toConsumableArray","hourlyData","map","dt","time","temperature","main","temp","catch","error","console","className","children","width","height","dataKey","tickFormatter","getHours","getMinutes","interval","padding","left","right","tick","fill","fontSize","axisLine","stroke","hide","labelFormatter","label","ISTTime","hours","minutes","ampm","formattedTime","toDateString","type","fillOpacity"],"sources":["C:/Users/prabh/OneDrive/Documents/html/Desktop/Weather-App/src/components/HourlyChart.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { AreaChart, Area, XAxis, YAxis, Legend, Tooltip } from 'recharts';\r\nimport { DataContext } from './DataContext';\r\nimport { useContext } from 'react';\r\n\r\nconst WeatherChart = () => {\r\n\r\n  const [temperatureData, setTemperatureData] = useState([]);\r\n  const { weatherData } = useContext(DataContext);\r\n\r\n  const convertToIST = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const ISTOffset = 330; // IST offset from UTC in minutes\r\n    const utc = date.getTime() + (date.getTimezoneOffset() * 60000);\r\n    const ist = new Date(utc + (ISTOffset * 60000));\r\n    return ist;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (weatherData) {\r\n      const apiKey = 'd7ddcaaf3a176d61e7db6e5f7d7f3996';\r\n      const city = weatherData.name;\r\n\r\n      // Fetch hourly weather data for today and tomorrow\r\n      const today = new Date().toISOString().slice(0, 10); // Get today's date in 'YYYY-MM-DD' format\r\n      const tomorrow = new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString().slice(0, 10); // Get tomorrow's date\r\n      axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${apiKey}&units=metric`)\r\n        .then(response => {\r\n          const todayData = response.data.list.filter(item => item.dt_txt.startsWith(today));\r\n          const tomorrowData = response.data.list.filter(item => item.dt_txt.startsWith(tomorrow));\r\n          const combinedData = [...todayData, ...tomorrowData];\r\n          const hourlyData = combinedData.map(item => ({\r\n            timestamp: item.dt * 1000,\r\n            time: convertToIST(item.dt * 1000), // Convert timestamp to IST\r\n            temperature: item.main.temp,\r\n          }));\r\n          setTemperatureData(hourlyData);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching weather data:', error);\r\n        });\r\n    }\r\n\r\n  }, [weatherData]);\r\n\r\n  return (\r\n    <div className=\"pt-20 px-40\">\r\n\r\n      <AreaChart width={1150} height={300} data={temperatureData}>\r\n        <XAxis\r\n          dataKey=\"timestamp\"\r\n          tickFormatter={(timestamp) => {\r\n            const time = convertToIST(timestamp);\r\n            return `${time.getHours()}:${time.getMinutes()}`;\r\n          }}\r\n          interval={0}\r\n          padding={{ left: 10, right: 10 }}\r\n          tick={{ fill: 'white', fontSize: 13 }}\r\n          axisLine={{ stroke: 'white' }} // Display every data point\r\n        />\r\n        <YAxis dataKey=\"temperature\" hide />\r\n        <Tooltip\r\n  labelFormatter={(label) => {\r\n    const time = convertToIST(label);\r\n    const ISTTime = new Date(label);\r\n    const hours = ISTTime.getHours();\r\n    const minutes = ISTTime.getMinutes();\r\n    const ampm = hours >= 12 ? 'PM' : 'AM';\r\n    const formattedTime = `${time.toDateString()} ${hours % 12 || 12}:${minutes < 10 ? '0' : ''}${minutes} ${ampm}`;\r\n    return formattedTime;\r\n  }}\r\n/>\r\n\r\n        <Legend />\r\n        <Area type=\"monotone\" dataKey=\"temperature\" fill=\"white\" stroke=\"white\" name=\"Hourly Temperature (Â°C)\" fillOpacity={0.3} />\r\n      </AreaChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}